load the digits  -- line 28

split the digits data into 2 parts(X,Y)
	- MNIST data is already set up as being split into X and y
	- set digits[X] as X, and digits[y] as y. line 31 and 32

in the mnist dataset the position of digit 0 is 10. you need to reformat
it to index 0 - line 34

get the number of distinct digits - line 36

-----BUILDING THE DATASET

set number of examples to the amount of rows in X
set size of example to amoint of columns in X - line 41

Y = convert to one of many --- need to understand this

-------SEPARATING THE DATASET

add the X and Y arrays to a single one dimensional array -- line 47
randomly shuffle the data -- line 48

add the shuffled data back to X and Y line 50 -- learn about array splicing

create 2 data sets. one for training and one for testing - line 55

split the data into 70 % and 30% and add to training dataset and testing data set - line 58
and give them field names of 'input' and 'target'
			-- lines 60 - 72 (learn about array splicing)


check if there is a network already saved and if so load it - line 75

else : build a network using the buildNetwork function of pyBrain -- line 78

sort the modules  (i.e. input --> middle --> output) --line 82

get a random index from the size of X - -line 84

get data from the X data located at the random index  --line 85

get the true outputs for the target fields in the arrays - line 88-89

how many epochs the trainer will train for. 1 epoch is one full run through the 
feed forward and back prop networks -- line 91

crreate the backpropagation trainer - 93

a for loop that loops through the epochs     - line 95

	set the amount of epochs within the loop to 1 - line 97

	pass the training data into the network and store  -- line 99
	get the matrix value of the result of the training -- line 100
	the accuracy of the network is aquired by getting the percentage error  --line 101
	of the trained value vs the target value. 
	(percentError is a numpy function which calculates percentage of differeces 
	between matrices)

	repeat the above steps for the test data -- lines 103 to 105

	print the accuracy for each epoch (minus the percentage error from 100) -- line 107

pass test input into the now trained network -- line 110

get the highest probability of which nubmer it is -- line 112

save the new network config to the file -- line 114













